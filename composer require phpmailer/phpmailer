<?php
header('Content-Type: application/json');

// Validate input
$required = ['server', 'port', 'username', 'password', 'from', 'to'];
foreach ($required as $field) {
    if (empty($_POST[$field])) {
        http_response_code(400);
        die(json_encode(['error' => "Missing required field: $field"]));
    }
}

// Sanitize inputs
$server = filter_var($_POST['server'], FILTER_SANITIZE_STRING);
$port = filter_var($_POST['port'], FILTER_SANITIZE_NUMBER_INT);
$username = filter_var($_POST['username'], FILTER_SANITIZE_STRING);
$password = $_POST['password']; // Don't sanitize password
$from = filter_var($_POST['from'], FILTER_SANITIZE_EMAIL);
$to = filter_var($_POST['to'], FILTER_SANITIZE_EMAIL);
$encryption = isset($_POST['encryption']) ? $_POST['encryption'] : 'tls';
$authMethod = isset($_POST['auth_method']) ? $_POST['auth_method'] : 'auto';

// Validate email addresses
if (!filter_var($from, FILTER_VALIDATE_EMAIL)) {
    http_response_code(400);
    die(json_encode(['error' => 'Invalid from email address']));
}

if (!filter_var($to, FILTER_VALIDATE_EMAIL)) {
    http_response_code(400);
    die(json_encode(['error' => 'Invalid to email address']));
}

// Test SMTP connection (using PHPMailer library is recommended in production)
require 'vendor/autoload.php'; // If using Composer

$mail = new PHPMailer\PHPMailer\PHPMailer(true);

try {
    // Server settings
    $mail->isSMTP();
    $mail->Host = $server;
    $mail->Port = $port;
    $mail->SMTPAuth = true;
    $mail->Username = $username;
    $mail->Password = $password;
    
    // Encryption
    if ($encryption === 'tls') {
        $mail->SMTPSecure = PHPMailer\PHPMailer\PHPMailer::ENCRYPTION_STARTTLS;
    } elseif ($encryption === 'ssl') {
        $mail->SMTPSecure = PHPMailer\PHPMailer\PHPMailer::ENCRYPTION_SMTPS;
    }
    
    // Authentication method
    if ($authMethod !== 'auto') {
        $mail->AuthType = strtoupper($authMethod);
    }
    
    // Recipients
    $mail->setFrom($from, 'SMTP Tester');
    $mail->addAddress($to);
    
    // Content
    $mail->isHTML(false);
    $mail->Subject = 'SMTP Test Email';
    $mail->Body = 'This is a test email sent by the SMTP Email Tester tool.';
    
    $mail->send();
    
    echo json_encode([
        'success' => true,
        'message' => 'Test email sent successfully!',
        'details' => [
            'server' => $server,
            'port' => $port,
            'encryption' => $encryption,
            'auth_method' => $authMethod !== 'auto' ? $authMethod : 'Auto-detected'
        ]
    ]);
} catch (Exception $e) {
    http_response_code(500);
    echo json_encode([
        'success' => false,
        'error' => 'Message could not be sent.',
        'error_details' => $mail->ErrorInfo
    ]);
}
